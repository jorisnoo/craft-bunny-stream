{% import '_includes/forms.twig' as forms %}

{% macro warning(text) %}
    <p class="warning has-icon">
        <span class="icon" aria-hidden="true"></span>
        <span class="visually-hidden">{{ 'Warning'|t('_bunny-stream') }}: </span>
        <span>{{ text }}</span>
    </p>
{% endmacro %}

{% macro tip(text) %}
    <p class="notice has-icon">
        <span class="icon" aria-hidden="true"></span>
        <span class="visually-hidden">{{ 'Warning'|t('_bunny-stream') }}: </span>
        <span>{{ text }}</span>
    </p>
{% endmacro %}

{% from _self import warning %}
{% from _self import tip %}

{% if asset ?? null %}

    <div class="pane" data-bunny-panel="{{ asset.id }}">

        {% if asset.bunnyStreamVideoId %}

            <div data-bunny-fields>
                {{ forms.copyTextField({
                    id: "bunny-stream-video-id-#{asset.id}",
                    label: 'Bunny Stream Video ID'|t('_bunny-stream'),
                    value: asset.bunnyStreamVideoId,
                    class: 'code',
                }) }}
            </div>

            <div data-bunny-fields>
                {{ forms.copyTextField({
                    id: "bunny-stream-playback-url-#{asset.id}",
                    label: 'Bunny Stream Playback URL'|t('_bunny-stream'),
                    value: asset.bunnyStreamDirectUrl,
                    class: 'code',
                }) }}
            </div>

            <hr />
        {% endif %}

        <div data-bunny-data="{{ asset.id }}">

            {% if asset.bunnyStreamVideoId %}

                <h3>{{ 'Bunny Stream Asset Data'|t('_bunny-stream') }}</h3>

                <div style="max-width:100%;overflow:auto;">
                    {% if asset.bunnyStreamData %}
                        <pre>{{ asset.bunnyStreamData|json_encode(constant('JSON_PRETTY_PRINT'))|raw }}</pre>
                    {% else %}
                        {{ warning('No Bunny Stream data available'|t('_bunny-stream')) }}
                    {% endif %}
                </div>

                <hr />

            {% endif %}

{#            <div class="flex">#}
{#                {% if asset.bunnyStreamVideoId %}#}
{#                    {{ forms.button({#}
{#                        label: 'Update Mux data'|t('_bunny-stream'),#}
{#                        spinner: true,#}
{#                        attributes: {#}
{#                            'data-update-mux-data-btn': true,#}
{#                            'data-asset-id': asset.id#}
{#                        }#}
{#                    }) }}#}
{#                    {{ forms.button({#}
{#                        label: 'Delete Mux asset'|t('_bunny-stream'),#}
{#                        spinner: true,#}
{#                        attributes: {#}
{#                            'data-delete-mux-asset-btn': true,#}
{#                            'data-asset-id': asset.id#}
{#                        },#}
{#                        class: ['submit']#}
{#                    }) }}#}
{#                {% endif %}#}
{#                {{ forms.button({#}
{#                    label: asset.muxAssetId ? 'Create new Mux asset'|t('_bunny-stream') : 'Create Mux asset'|t('_bunny-stream'),#}
{#                    spinner: true,#}
{#                    attributes: {#}
{#                        'data-create-mux-asset-btn': true,#}
{#                        'data-asset-id': asset.id,#}
{#                        'data-mux-asset-id': asset.muxAssetId#}
{#                    },#}
{#                    class: ['submit']#}
{#                }) }}#}
{#            </div>#}

{#        </div>#}

        </div>
    </div>

{#    {% js %}#}

{#        (() => {#}

{#            async function refreshView(assetId) {#}
{#                const url = window.location.href;#}
{#                const response = await fetch(url);#}
{#                const html = await response.text();#}
{#                const $html = $(html).find(`[data-mux-panel="${assetId}"]`);#}
{#                [`#fields-mux-asset-id-${assetId}`, `#fields-mux-playback-id-${assetId}`, `#fields-mux-stream-url-${assetId}`].forEach(fieldId => {#}
{#                    const field = $(fieldId).get(0);#}
{#                    const newField = $html.find(fieldId).get(0);#}
{#                    if (!field || !newField) {#}
{#                        return;#}
{#                    }#}
{#                    field.value = newField.value;#}
{#                    if (field.value) {#}
{#                        field.classList.remove('disabled');#}
{#                    } else {#}
{#                        field.classList.add('disabled');#}
{#                    }#}
{#                });#}
{#                const muxDataDiv = $(`[data-mux-data="${assetId}"]`).get(0);#}
{#                const newMuxDataDiv = $html.find(`[data-mux-data="${assetId}"]`).get(0);#}
{#                if (muxDataDiv && newMuxDataDiv) {#}
{#                    $(muxDataDiv).html($(newMuxDataDiv).html());#}
{#                }#}
{#            };#}

{#            const onUpdateMuxDataBtnClick = e => {#}

{#                const btn = e.currentTarget;#}
{#                const { assetId } = btn.dataset;#}

{#                if (btn.classList.contains('loading')) {#}
{#                    return;#}
{#                }#}

{#                btn.classList.add('loading');#}

{#                Craft.sendActionRequest(#}
{#                        'POST',#}
{#                        '_bunny-stream/default/update-data',#}
{#                        {#}
{#                            data: {#}
{#                                assetId#}
{#                            }#}
{#                        }#}
{#                    )#}
{#                    .then(({data}) => {#}
{#                        Craft.cp.displaySuccess(data.message);#}
{#                        btn.classList.remove('loading');#}
{#                        if (Craft.broadcaster) {#}
{#                            Craft.broadcaster.postMessage({#}
{#                                event: 'saveElement',#}
{#                                id: assetId#}
{#                            });#}
{#                        }#}
{#                    })#}
{#                    .catch(({response}) => {#}
{#                        Craft.cp.displayError(response.data.message);#}
{#                        btn.disabled = false;#}
{#                        btn.classList.remove('loading');#}
{#                    })#}
{#                    .then(() => {#}
{#                        refreshView(assetId);#}
{#                    });#}

{#            };#}

{#            const onDeleteMuxAssetBtnClick = e => {#}

{#                const btn = e.currentTarget;#}
{#                const { assetId } = btn.dataset;#}

{#                if (btn.classList.contains('loading')) {#}
{#                    return;#}
{#                }#}

{#                if (!window.confirm('This will permanently delete the Mux asset. Do you want to proceed?')) {#}
{#                    return;#}
{#                }#}

{#                btn.classList.add('loading');#}

{#                Craft.sendActionRequest(#}
{#                        'POST',#}
{#                        '_bunny-stream/default/delete',#}
{#                        {#}
{#                            data: {#}
{#                                assetId#}
{#                            }#}
{#                        }#}
{#                    )#}
{#                    .then(({data}) => {#}
{#                        Craft.cp.displaySuccess(data.message);#}
{#                        btn.classList.remove('loading');#}
{#                        if (Craft.broadcaster) {#}
{#                            Craft.broadcaster.postMessage({#}
{#                                event: 'saveElement',#}
{#                                id: assetId#}
{#                            });#}
{#                        }#}
{#                    })#}
{#                    .catch(({response}) => {#}
{#                        Craft.cp.displayError(response.data.message);#}
{#                        btn.disabled = false;#}
{#                        btn.classList.remove('loading');#}
{#                    })#}
{#                    .then(() => {#}
{#                        refreshView(assetId);#}
{#                    });#}

{#            };#}

{#            const onCreateMuxAssetBtnClick = e => {#}

{#                const btn = e.currentTarget;#}
{#                const { assetId, muxAssetId } = btn.dataset;#}

{#                if (muxAssetId && !window.confirm('This will delete the existing Mux asset and create a new one. Do you want to proceed?')) {#}
{#                    return;#}
{#                }#}

{#                if (btn.classList.contains('loading')) {#}
{#                    return;#}
{#                }#}

{#                btn.classList.add('loading');#}

{#                Craft.sendActionRequest(#}
{#                    'POST',#}
{#                    '_bunny-stream/default/create',#}
{#                    {#}
{#                        data: {#}
{#                            assetId#}
{#                        }#}
{#                    }#}
{#                )#}
{#                .then(({data}) => {#}
{#                    Craft.cp.displaySuccess(data.message);#}
{#                    btn.classList.remove('loading');#}
{#                    if (Craft.broadcaster) {#}
{#                        Craft.broadcaster.postMessage({#}
{#                            event: 'saveElement',#}
{#                            id: assetId#}
{#                        });#}
{#                    }#}
{#                })#}
{#                .catch(({response}) => {#}
{#                    Craft.cp.displayError(response.data.message);#}
{#                    btn.disabled = false;#}
{#                    btn.classList.remove('loading');#}
{#                })#}
{#                .then(() => {#}
{#                    refreshView(assetId);#}
{#                });#}

{#            };#}

{#            $('body').on('click', 'button[data-update-mux-data-btn]', onUpdateMuxDataBtnClick);#}
{#            $('body').on('click', 'button[data-delete-mux-asset-btn]', onDeleteMuxAssetBtnClick);#}
{#            $('body').on('click', 'button[data-create-mux-asset-btn]', onCreateMuxAssetBtnClick);#}

{#        })();#}
{#    {% endjs %}#}

{% endif %}
